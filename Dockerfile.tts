FROM python:3.11-slim

WORKDIR /app

# Install system dependencies including Rust
RUN apt-get update && apt-get install -y \
    build-essential \
    python3-dev \
    curl \
    git \
    && curl https://sh.rustup.rs -sSf | sh -s -- -y \
    && export PATH="$HOME/.cargo/bin:$PATH" \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Make sure Rust is in PATH for subsequent RUN commands
ENV PATH="/root/.cargo/bin:${PATH}"

# Upgrade pip and install build tools
RUN pip install --upgrade pip setuptools wheel

# Install TTS and required dependencies with specific PyTorch version
RUN pip install --break-system-packages \
    torch==2.4.0 \
    torchaudio==2.4.0 \
    "numpy>=1.24.0,<2.0.0" \
    "scipy>=1.10.0" \
    "pandas>=1.5.0,<2.0.0" \
    "transformers>=4.33.0,<4.50.0" \
    spacy \
    gruut \
    sudachipy \
    ruaccent \
    TTS

# Создаем утилиту для обработки ударений
RUN echo '#!/usr/bin/env python3\n\
# -*- coding: utf-8 -*-\n\
import sys\n\
import subprocess\n\
import re\n\
\n\
def accent_to_unicode(text):\n\
    """Преобразует ударения из формата ruaccent (м'"'"'олоко) в Unicode (мóлоко)"""\n\
    \n\
    # Словарь соответствий для основных гласных\n\
    accent_map = {\n\
        "а": "á",\n\
        "е": "é", \n\
        "ё": "ё",  # уже с ударением\n\
        "и": "í",\n\
        "о": "ó",\n\
        "у": "ú",\n\
        "ы": "ы́",\n\
        "э": "э́",\n\
        "ю": "ю́",\n\
        "я": "я́",\n\
        "А": "Á",\n\
        "Е": "É",\n\
        "Ё": "Ё",\n\
        "И": "Í",\n\
        "О": "Ó",\n\
        "У": "Ú",\n\
        "Ы": "Ы́",\n\
        "Э": "Э́",\n\
        "Ю": "Ю́",\n\
        "Я": "Я́"\n\
    }\n\
    \n\
    # Заменяем паттерн буква + апостроф на ударную букву\n\
    def replace_accent(match):\n\
        letter = match.group(1)\n\
        return accent_map.get(letter, letter)\n\
    \n\
    # Ищем паттерн: гласная + апостроф\n\
    pattern = r"([аеёиоуыэюяАЕЁИОУЫЭЮЯ])'"'"'"\n\
    result = re.sub(pattern, replace_accent, text)\n\
    \n\
    return result\n\
\n\
def process_text_with_ruaccent(text):\n\
    """Обрабатывает текст через ruaccent и преобразует ударения"""\n\
    try:\n\
        # Запускаем ruaccent\n\
        process = subprocess.Popen(\n\
            ["ruaccent"],\n\
            stdin=subprocess.PIPE,\n\
            stdout=subprocess.PIPE,\n\
            stderr=subprocess.PIPE,\n\
            text=True,\n\
            encoding="utf-8"\n\
        )\n\
        \n\
        # Передаем текст в ruaccent\n\
        stdout, stderr = process.communicate(input=text)\n\
        \n\
        if process.returncode != 0:\n\
            print(f"Error running ruaccent: {stderr}", file=sys.stderr)\n\
            return text  # Возвращаем исходный текст при ошибке\n\
        \n\
        # Преобразуем ударения из формата ruaccent в Unicode\n\
        accented_text = accent_to_unicode(stdout.strip())\n\
        \n\
        return accented_text\n\
        \n\
    except Exception as e:\n\
        print(f"Error processing text: {e}", file=sys.stderr)\n\
        return text  # Возвращаем исходный текст при ошибке\n\
\n\
def main():\n\
    if len(sys.argv) > 1:\n\
        # Если есть аргументы командной строки, используем их\n\
        text = " ".join(sys.argv[1:])\n\
    else:\n\
        # Читаем из stdin\n\
        text = sys.stdin.read().strip()\n\
    \n\
    if not text:\n\
        print("Usage: my_ruaccent [TEXT] or echo TEXT | my_ruaccent", file=sys.stderr)\n\
        sys.exit(1)\n\
    \n\
    # Обрабатываем текст\n\
    processed_text = process_text_with_ruaccent(text)\n\
    \n\
    # Выводим результат\n\
    print(processed_text)\n\
\n\
if __name__ == "__main__":\n\
    main()\n\
' > /usr/local/bin/my_ruaccent && chmod +x /usr/local/bin/my_ruaccent

# Create shared directory
RUN mkdir -p /app/shared

# Keep container running
CMD ["tail", "-f", "/dev/null"]
